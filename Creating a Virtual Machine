What you'll do
Create a virtual machine with the Cloud Console.

Create a virtual machine with the gcloud command line.

Deploy a web server and connect it to a virtual machine

Prerequisites
Familiarity with standard Linux text editors such as vim, emacs, or nano will be helpful.

#Activate Cloud Shell
In the Cloud Console, in the top right toolbar, click the Activate Cloud Shell button.

#You can list the active account name with this command:

$ gcloud auth list

(Output)

ACTIVE: *
ACCOUNT: student-01-xxxxxxxxxxxx@qwiklabs.net
To set the active account, run:
    $ gcloud config set account `ACCOUNT`
    
 --------------------------------------------------
 
 #You can list the project ID with this command:

$ gcloud config list project

(Output)

[core]
project = <project_ID>
(Example output)

[core]
project = qwiklabs-gcp-44776a13dea667a6
---------------------------------------------------

# Task-01 #
Task 1: Create a new instance from the Cloud Console

1. In the Cloud Console, on the Navigation menu (Navigation menu), click Compute Engine > VM Instances.

 This may take a minute to initialize for the first time.

2. To create a new instance, click CREATE INSTANCE.

3. There are many parameters you can configure when creating a new instance. Use the following for this lab:

Field	Value	Additional Information
Name	gcelab	Name for the VM instance
Region	us-central1 (Iowa)	For more information about regions, see Regions and Zones.
Zone	us-central1-f	Note: Remember the zone that you selected: you'll need it later. For more information about zones, see Regions and Zones.
Series	N1	Name of the series
Machine Type	2 vCPU	This is an (n1-standard-2), 2-CPU, 7.5GB RAM instance. Several machine types are available, ranging from micro instance types to 32-core/208GB RAM instance types. For more information, see Machine Types. Note: A new project has a default resource quota, which may limit the number of CPU cores. You can request more when you work on projects outside this lab.
Boot Disk	New 10 GB balanced persistent disk OS Image: Debian GNU/Linux 10 (buster)	Several images are available, including Debian, Ubuntu, CoreOS, and premium images such as Red Hat Enterprise Linux and Windows Server. For more information, see Operating System documentation.
Firewall	Allow HTTP traffic	Select this option in order to access a web server that you'll install later. Note: This will automatically create a firewall rule to allow HTTP traffic on port 80.

4. Click Create.

It should take about a minute for the machine to be created. After that, the new virtual machine is listed on the VM Instances page.

5. To use SSH to connect to the virtual machine, in the row for your machine, click SSH.

--------------------------------------------------------------------------------------------------------------------------------------------------------------

# Task-02 #

Task 2: Install an NGINX web server
Now you'll install an NGINX web server, one of the most popular web servers in the world, to connect your virtual machine to something.

1. In the SSH terminal, to get root access, run the following command:

sudo su -

2. As the root user, update your OS:

apt-get update

Expected output:

Get:1 http://security.debian.org stretch/updates InRelease [94.3 kB]
Ign http://deb.debian.org strech InRelease
Get:2 http://deb.debian.org strech-updates InRelease [91.0 kB]
...
3. Install NGINX:

apt-get install nginx -y

Expected output:

Reading package lists... Done
Building dependency tree
Reading state information... Done
The following additional packages will be installed:
...
4. Confirm that NGINX is running:

ps auwx | grep nginx

Expected output:

root      2330  0.0  0.0 159532  1628 ?        Ss   14:06   0:00 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;
www-data  2331  0.0  0.0 159864  3204 ?        S    14:06   0:00 nginx: worker process
www-data  2332  0.0  0.0 159864  3204 ?        S    14:06   0:00 nginx: worker process
root      2342  0.0  0.0  12780   988 pts/0    S+   14:07   0:00 grep nginx
5. To see the web page, return to the Cloud Console and click the External IP link in the row for your machine, or add the External IP value to http://EXTERNAL_IP/ in a new browser window or tab.

fa24dc2b865d88cf.png

This default web page should open:


This launches an SSH client directly from your browser.

-----------------------------------------------------------------------------------------------------------------------------------------------------------

# Task-03 #
Task 3: Create a new instance with gcloud
Instead of using the Cloud Console to create a virtual machine instance, you can use the command line tool gcloud, which is pre-installed in Google Cloud Shell. Cloud Shell is a Debian-based virtual machine loaded with all the development tools you'll need (gcloud, git, and others) and offers a persistent 5-GB home directory.

Note: If you want to try this on your own machine, read the gcloud command line tool guide.
1. In the Cloud Shell, use gcloud to create a new virtual machine instance from the command line:

gcloud compute instances create gcelab2 --machine-type n1-standard-2 --zone us-central1-f

Expected output:

Created [...gcelab2].
NAME     ZONE           MACHINE_TYPE  ...    STATUS
gcelab2  us-central1-f  n1-standard-2 ...    RUNNING

The new instance has these default values:

The latest Debian 10 (buster) image.
The n1-standard-2 machine type. In this lab, you can select one of these other machine types: n1-highmem-4 or n1-highcpu-4. When you're working on a project outside Qwiklabs, you can also specify a custom machine type.
A root persistent disk with the same name as the instance; the disk is automatically attached to the instance.
To see all the defaults, run:

gcloud compute instances create --help

3. To exit help, press CTRL + C.

4. In the Cloud Console, on the Navigation menu, click Compute Engine > VM instances. Your 2 new instances should be listed.

vm-instances.png

5. You can also use SSH to connect to your instance via gcloud. Make sure to add your zone, or omit the --zone flag if you've set the option globally:

gcloud compute ssh gcelab2 --zone us-central1-f
Copied!
Expected output:

WARNING: The public SSH key file for gcloud does not exist.
WARNING: The private SSH key file for gcloud does not exist.
WARNING: You do not have an SSH key for gcloud.
WARNING: [/usr/bin/ssh-keygen] will be executed to generate a key.
This tool needs to create the directory
[/home/gcpstaging306_student/.ssh] before being able to generate SSH
Keys.

6. Type Y to continue.

Do you want to continue? (Y/n)
7. Press ENTER through the passphrase section to leave the passphrase empty.

Generating public/private rsa key pair.
Enter passphrase (empty for no passphrase)
8. After connecting, disconnect from SSH by exiting from the remote shell:

exit
---------------------------------------------------------------------------------------------------------------------------------------------------

Congratulations!
Compute Engine is the foundation of Google Cloud's infrastructure as a service. You created a virtual machine with Compute Engine and can now map your 
existing server infrastructure, load balancers, and network topology to Google Cloud














